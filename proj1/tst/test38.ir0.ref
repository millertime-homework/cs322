IR_PROGRAM
main (locals=0, max_args=0) {
 [MOVE (NAME numbers) (ESEQ
 [MOVE (TEMP 1) (CALL (NAME malloc) ( (BINOP * (CONST 11) (NAME wSZ))))]
 [MOVE (MEM (TEMP 1)) (CONST 10)]
 [MOVE (TEMP 2) (BINOP + (TEMP 1) (BINOP * (CONST 10) (NAME wSZ)))]
 [LABEL L0]
 [MOVE (MEM (TEMP 2)) (CONST 0)]
 [MOVE (TEMP 2) (BINOP - (TEMP 2) (NAME wSZ))]
 [CJUMP > (TEMP 2) (TEMP 1) (NAME L0)]
 (TEMP 1))]
 [MOVE (NAME cnt) (CONST 0)]
 [LABEL L1]
 [CJUMP == (ESEQ
 [MOVE (TEMP 3) (CONST 1)]
 [CJUMP < (NAME cnt) (CONST 10) (NAME L3)]
 [MOVE (TEMP 3) (CONST 0)]
 [LABEL L3]
 (TEMP 3)) (CONST 0) (NAME L2)]
 [MOVE (MEM (BINOP + (NAME numbers) (BINOP * (BINOP + (NAME cnt) (CONST 1)) (NAME wSZ)))) (BINOP - (CONST 10) (NAME cnt))]
 [MOVE (NAME cnt) (BINOP + (NAME cnt) (CONST 1))]
 [JUMP (NAME L1)]
 [LABEL L2]
 [CALLST (NAME selectionSort) ( (NAME numbers) (NAME cnt))]
 [CALLST (NAME print) ( (STRING "Your numbers in sorted order are:"))]
 [MOVE (NAME cnt) (CONST 0)]
 [LABEL L4]
 [CJUMP == (ESEQ
 [MOVE (TEMP 4) (CONST 1)]
 [CJUMP < (NAME cnt) (CONST 10) (NAME L6)]
 [MOVE (TEMP 4) (CONST 0)]
 [LABEL L6]
 (TEMP 4)) (CONST 0) (NAME L5)]
 [CALLST (NAME print) ( (MEM (BINOP + (NAME numbers) (BINOP * (BINOP + (NAME cnt) (CONST 1)) (NAME wSZ)))))]
 [MOVE (NAME cnt) (BINOP + (NAME cnt) (CONST 1))]
 [JUMP (NAME L4)]
 [LABEL L5]
}
selectionSort (locals=0, max_args=0) {
 [MOVE (NAME i) (BINOP - (NAME count) (CONST 1))]
 [LABEL L7]
 [CJUMP == (ESEQ
 [MOVE (TEMP 5) (CONST 1)]
 [CJUMP >= (NAME i) (CONST 0) (NAME L9)]
 [MOVE (TEMP 5) (CONST 0)]
 [LABEL L9]
 (TEMP 5)) (CONST 0) (NAME L8)]
 [MOVE (NAME j) (CONST 0)]
 [MOVE (NAME k) (CONST 0)]
 [LABEL L10]
 [CJUMP == (ESEQ
 [MOVE (TEMP 6) (CONST 1)]
 [CJUMP <= (NAME j) (NAME i) (NAME L12)]
 [MOVE (TEMP 6) (CONST 0)]
 [LABEL L12]
 (TEMP 6)) (CONST 0) (NAME L11)]
 [CJUMP == (ESEQ
 [MOVE (TEMP 7) (CONST 1)]
 [CJUMP > (MEM (BINOP + (NAME A) (BINOP * (BINOP + (NAME j) (CONST 1)) (NAME wSZ)))) (MEM (BINOP + (NAME A) (BINOP * (BINOP + (NAME k) (CONST 1)) (NAME wSZ)))) (NAME L14)]
 [MOVE (TEMP 7) (CONST 0)]
 [LABEL L14]
 (TEMP 7)) (CONST 0) (NAME L13)]
 [MOVE (NAME k) (NAME j)]
 [LABEL L13]
 [MOVE (NAME j) (BINOP + (NAME j) (CONST 1))]
 [JUMP (NAME L10)]
 [LABEL L11]
 [CJUMP == (ESEQ
 [MOVE (TEMP 8) (CONST 1)]
 [CJUMP != (NAME k) (NAME i) (NAME L16)]
 [MOVE (TEMP 8) (CONST 0)]
 [LABEL L16]
 (TEMP 8)) (CONST 0) (NAME L15)]
 [MOVE (NAME temp) (MEM (BINOP + (NAME A) (BINOP * (BINOP + (NAME k) (CONST 1)) (NAME wSZ))))]
 [MOVE (MEM (BINOP + (NAME A) (BINOP * (BINOP + (NAME k) (CONST 1)) (NAME wSZ)))) (MEM (BINOP + (NAME A) (BINOP * (BINOP + (NAME i) (CONST 1)) (NAME wSZ))))]
 [MOVE (MEM (BINOP + (NAME A) (BINOP * (BINOP + (NAME i) (CONST 1)) (NAME wSZ)))) (NAME temp)]
 [LABEL L15]
 [MOVE (NAME i) (BINOP - (NAME i) (CONST 1))]
 [JUMP (NAME L7)]
 [LABEL L8]
}
