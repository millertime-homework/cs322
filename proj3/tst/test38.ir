IR_PROGRAM
main (locals=2, max_args=3) {
 [MOVE (TEMP 1) (CALL (NAME malloc) ( (BINOP * (CONST 11) (NAME wSZ))))]
 [MOVE (MEM (TEMP 1)) (CONST 10)]
 [MOVE (TEMP 2) (BINOP + (TEMP 1) (BINOP * (CONST 10) (NAME wSZ)))]
 [LABEL L0]
 [MOVE (MEM (TEMP 2)) (CONST 0)]
 [MOVE (TEMP 2) (BINOP - (TEMP 2) (NAME wSZ))]
 [CJUMP > (TEMP 2) (TEMP 1) (NAME L0)]
 [MOVE (VAR 1) (TEMP 1)]
 [MOVE (VAR 2) (CONST 0)]
 [LABEL L1]
 [MOVE (TEMP 3) (CONST 1)]
 [CJUMP < (VAR 2) (CONST 10) (NAME L3)]
 [MOVE (TEMP 3) (CONST 0)]
 [LABEL L3]
 [CJUMP == (TEMP 3) (CONST 0) (NAME L2)]
 [MOVE (MEM (BINOP + (VAR 1) (BINOP * (BINOP + (VAR 2) (CONST 1)) (NAME wSZ)))) (BINOP - (CONST 10) (VAR 2))]
 [MOVE (VAR 2) (BINOP + (VAR 2) (CONST 1))]
 [JUMP (NAME L1)]
 [LABEL L2]
 [CALLST (NAME prog_selectionSort) ( (PARAM 0) (VAR 1) (VAR 2))]
 [CALLST (NAME print) ( (STRING "Your numbers in sorted order are:"))]
 [MOVE (VAR 2) (CONST 0)]
 [LABEL L4]
 [MOVE (TEMP 4) (CONST 1)]
 [CJUMP < (VAR 2) (CONST 10) (NAME L6)]
 [MOVE (TEMP 4) (CONST 0)]
 [LABEL L6]
 [CJUMP == (TEMP 4) (CONST 0) (NAME L5)]
 [CALLST (NAME print) ( (MEM (BINOP + (VAR 1) (BINOP * (BINOP + (VAR 2) (CONST 1)) (NAME wSZ)))))]
 [MOVE (VAR 2) (BINOP + (VAR 2) (CONST 1))]
 [JUMP (NAME L4)]
 [LABEL L5]
}
prog_selectionSort (locals=4, max_args=0) {
 [MOVE (VAR 2) (BINOP - (PARAM 2) (CONST 1))]
 [LABEL L7]
 [MOVE (TEMP 5) (CONST 1)]
 [CJUMP >= (VAR 2) (CONST 0) (NAME L9)]
 [MOVE (TEMP 5) (CONST 0)]
 [LABEL L9]
 [CJUMP == (TEMP 5) (CONST 0) (NAME L8)]
 [MOVE (VAR 3) (CONST 0)]
 [MOVE (VAR 4) (CONST 0)]
 [LABEL L10]
 [MOVE (TEMP 6) (CONST 1)]
 [CJUMP <= (VAR 3) (VAR 2) (NAME L12)]
 [MOVE (TEMP 6) (CONST 0)]
 [LABEL L12]
 [CJUMP == (TEMP 6) (CONST 0) (NAME L11)]
 [CJUMP <= (MEM (BINOP + (PARAM 1) (BINOP * (BINOP + (VAR 3) (CONST 1)) (NAME wSZ)))) (MEM (BINOP + (PARAM 1) (BINOP * (BINOP + (VAR 4) (CONST 1)) (NAME wSZ)))) (NAME L13)]
 [MOVE (VAR 4) (VAR 3)]
 [LABEL L13]
 [MOVE (VAR 3) (BINOP + (VAR 3) (CONST 1))]
 [JUMP (NAME L10)]
 [LABEL L11]
 [CJUMP == (VAR 4) (VAR 2) (NAME L14)]
 [MOVE (VAR 1) (MEM (BINOP + (PARAM 1) (BINOP * (BINOP + (VAR 4) (CONST 1)) (NAME wSZ))))]
 [MOVE (MEM (BINOP + (PARAM 1) (BINOP * (BINOP + (VAR 4) (CONST 1)) (NAME wSZ)))) (MEM (BINOP + (PARAM 1) (BINOP * (BINOP + (VAR 2) (CONST 1)) (NAME wSZ))))]
 [MOVE (MEM (BINOP + (PARAM 1) (BINOP * (BINOP + (VAR 2) (CONST 1)) (NAME wSZ)))) (VAR 1)]
 [LABEL L14]
 [MOVE (VAR 2) (BINOP - (VAR 2) (CONST 1))]
 [JUMP (NAME L7)]
 [LABEL L8]
}
