	.global main
	.align 4
main:
!locals=1, max_args=1
	save %sp,-96,%sp
! [MOVE (TEMP 1) (CALL (NAME malloc) ( (NAME wSZ)))]
	mov 4,%o0
	call malloc
	nop
!>> Temp t1 assigned to reg %l0
	mov %o0,%l0
! [MOVE (MEM (TEMP 1)) (CONST 0)]
	mov 0,%l1
	st %l1,[%l0]
! [MOVE (VAR 1) (TEMP 1)]
	st %l0,[%fp-4]
! [MOVE (TEMP 6) (CALL (NAME A_go) ( (VAR 1)))]
	ld [%fp-4],%l1
	st %l1,[%sp+68]
	call A_go
	nop
!>> Temp t6 assigned to reg %l1
	mov %o0,%l1
! [CALLST (NAME print) ( (TEMP 6))]
	mov %l1,%o1
	sethi %hi(L$1),%o0
	call printf
	or %o0, %lo(L$1),%o0
	ret
	restore

	.align 4
A_go:
!locals=1, max_args=0
	save %sp,-96,%sp
! [MOVE (TEMP 2) (CALL (NAME malloc) ( (BINOP * (CONST 3) (NAME wSZ))))]
	mov 3,%l0
	smul %l0,4,%l0
	mov %l0,%o0
	call malloc
	nop
!>> Temp t2 assigned to reg %l0
	mov %o0,%l0
! [MOVE (MEM (TEMP 2)) (CONST 2)]
	mov 2,%l1
	st %l1,[%l0]
! [MOVE (TEMP 3) (BINOP + (TEMP 2) (BINOP * (CONST 2) (NAME wSZ)))]
	mov 2,%l1
	smul %l1,4,%l1
	add %l0,%l1,%l2
!>> Temp t3 assigned to reg %l1
	mov %l2,%l1
! [LABEL L0]
L0:
! [MOVE (MEM (TEMP 3)) (CONST 0)]
	mov 0,%l2
	st %l2,[%l1]
! [MOVE (TEMP 3) (BINOP - (TEMP 3) (NAME wSZ))]
	sub %l1,4,%l2
	mov %l2,%l1
! [CJUMP > (TEMP 3) (TEMP 2) (NAME L0)]
	cmp %l1,%l0
	bg L0
	nop
! [MOVE (FIELD (PARAM 0) 0) (TEMP 2)]
	ld [%fp+68],%l2
	st %l0,[%l2]
! [MOVE (TEMP 4) (CALL (NAME malloc) ( (BINOP * (CONST 3) (NAME wSZ))))]
	mov 3,%l2
	smul %l2,4,%l2
	mov %l2,%o0
	call malloc
	nop
!>> Temp t4 assigned to reg %l2
	mov %o0,%l2
! [MOVE (MEM (TEMP 4)) (CONST 2)]
	mov 2,%l3
	st %l3,[%l2]
! [MOVE (TEMP 5) (BINOP + (TEMP 4) (BINOP * (CONST 2) (NAME wSZ)))]
	mov 2,%l3
	smul %l3,4,%l3
	add %l2,%l3,%l4
!>> Temp t5 assigned to reg %l3
	mov %l4,%l3
! [LABEL L1]
L1:
! [MOVE (MEM (TEMP 5)) (CONST 0)]
	mov 0,%l4
	st %l4,[%l3]
! [MOVE (TEMP 5) (BINOP - (TEMP 5) (NAME wSZ))]
	sub %l3,4,%l4
	mov %l4,%l3
! [CJUMP > (TEMP 5) (TEMP 4) (NAME L1)]
	cmp %l3,%l2
	bg L1
	nop
! [MOVE (VAR 1) (TEMP 4)]
	st %l2,[%fp-4]
! [MOVE (MEM (BINOP + (FIELD (PARAM 0) 0) (NAME wSZ))) (CONST 1)]
	mov 1,%l4
	ld [%fp+68],%l5
	ld [%l5],%l6
	add %l6,4,%l6
	st %l4,[%l6]
! [MOVE (MEM (BINOP + (FIELD (PARAM 0) 0) (BINOP * (CONST 2) (NAME wSZ)))) (CONST 2)]
	mov 2,%l4
	ld [%fp+68],%l5
	ld [%l5],%l6
	mov 2,%l5
	smul %l5,4,%l5
	add %l6,%l5,%l6
	st %l4,[%l6]
! [MOVE (MEM (BINOP + (VAR 1) (NAME wSZ))) (CONST 3)]
	mov 3,%l4
	ld [%fp-4],%l5
	add %l5,4,%l5
	st %l4,[%l5]
! [MOVE (MEM (BINOP + (VAR 1) (BINOP * (CONST 2) (NAME wSZ)))) (CONST 4)]
	mov 4,%l4
	ld [%fp-4],%l5
	mov 2,%l6
	smul %l6,4,%l6
	add %l5,%l6,%l5
	st %l4,[%l5]
! [CALLST (NAME print) ( (MEM (BINOP + (FIELD (PARAM 0) 0) (BINOP * (CONST 2) (NAME wSZ)))))]
	ld [%fp+68],%l4
	ld [%l4],%l5
	mov 2,%l4
	smul %l4,4,%l4
	add %l5,%l4,%l5
	ld [%l5],%l5
	mov %l5,%o1
	sethi %hi(L$1),%o0
	call printf
	or %o0, %lo(L$1),%o0
! [CALLST (NAME print) ( (MEM (BINOP + (VAR 1) (BINOP * (CONST 2) (NAME wSZ)))))]
	ld [%fp-4],%l4
	mov 2,%l5
	smul %l5,4,%l5
	add %l4,%l5,%l4
	ld [%l4],%l4
	mov %l4,%o1
	sethi %hi(L$1),%o0
	call printf
	or %o0, %lo(L$1),%o0
! [RETURN (MEM (BINOP + (FIELD (PARAM 0) 0) (NAME wSZ)))]
	ld [%fp+68],%l4
	ld [%l4],%l5
	add %l5,4,%l5
	ld [%l5],%l5
	mov %l5,%i0
	ret
	restore
	ret
	restore

L$1:	.asciz "%d\n"

!Total regs:  7
!Total insts: 119
